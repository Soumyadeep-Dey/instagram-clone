{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"E:\\\\Cognizant\\\\FULL PROJECT\\\\insta-frontend\\\\src\\\\Components\\\\Post\\\\Post.js\";\nimport React, { Component } from 'react';\nimport \"./Post.css\";\nimport { Avatar } from '@material-ui/core';\nimport postimage from \"../../images/post.jpg\";\nimport love from \"../../images/love.svg\";\nimport comment from \"../../images/comment.svg\";\nimport share from \"../../images/share.svg\";\n\nclass Post extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getComments = () => {\n      //API backend\n      // let data=[\n      //     {\n      //         \"username\": \"ASD\",\n      //         \"commentId\":\"1234\",\n      //         \"timeStamp\":\"123456\",\n      //         \"description\":\"Comment 1\"\n      //     },\n      //     {\n      //         \"username\": \"anindya\",\n      //         \"commentId\":\"1234\",\n      //         \"timeStamp\":\"123456\",\n      //         \"description\":\"Comment 2\"\n      //     },\n      //     {\n      //         \"username\": \"dasgupta\",\n      //         \"commentId\":\"1234\",\n      //         \"timeStamp\":\"123456\",\n      //         \"description\":\"Comment 3\"\n      //     }\n      // ];\n      fetch('http://localhost:8080/comments/' + this.props.id).then(response => response.json()).then(data => {\n        this.setState({\n          commentList: data\n        });\n      });\n    };\n\n    this.submitComments = event => {\n      if (event.key == \"Enter\") {\n        let comment = event.currentTarget.value;\n\n        if (comment != null || comment != undefined) {\n          let payload = {\n            \"commentId\": Math.floor(Math.random() * 1000000).toString(),\n            \"userId\": JSON.parse(localStorage.getItem(\"users\")).uid,\n            \"postId\": this.props.id,\n            \"timeStamp\": new Date().getTime(),\n            \"comment\": comment\n          };\n          const requestOptions = {\n            method: \"POST\",\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(payload)\n          };\n          fetch(\"http://localhost:8080/comments\", requestOptions).then(response => response.json()).then(data => {\n            this.getComments();\n          }).catch(error => {});\n        }\n      }\n    };\n\n    this.state = {\n      commentList: []\n    };\n  }\n\n  componentDidMount() {\n    this.getComments();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post__container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post__header\",\n        children: [/*#__PURE__*/_jsxDEV(Avatar, {\n          className: \"post__image\",\n          src: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post__username\",\n          children: this.props.userName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: this.props.postImage,\n          width: \"615px\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            \"marginLeft\": \"10px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: love,\n            className: \"post_reactimage\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: comment,\n            className: \"post_reactimage\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: share,\n            className: \"post_reactimage\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            \"fontWeight\": \"bold\",\n            \"marginLeft\": \"20px  \"\n          },\n          children: [this.props.likes, \" likes\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [this.state.commentList.map((item, index) => index < 4 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post_comment\",\n          children: [item.userName, \": \", item.comment]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 94\n        }, this)), /*#__PURE__*/_jsxDEV(\"input\", {\n          text: \"text\",\n          onKeyPress: this.submitComments,\n          className: \"post__commentbox\",\n          placeholder: \"Add a comment...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default Post;","map":{"version":3,"sources":["E:/Cognizant/FULL PROJECT/insta-frontend/src/Components/Post/Post.js"],"names":["React","Component","Avatar","postimage","Post","constructor","props","getComments","fetch","id","then","response","json","data","setState","commentList","submitComments","event","key","comment","currentTarget","value","undefined","payload","Math","floor","random","toString","JSON","parse","localStorage","getItem","uid","Date","getTime","requestOptions","method","headers","body","stringify","catch","error","state","componentDidMount","render","userName","postImage","love","share","likes","map","item","index"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport \"./Post.css\";\r\nimport { Avatar } from '@material-ui/core';\r\nimport postimage from \"../../images/post.jpg\"; \r\nimport love from \"../../images/love.svg\"; \r\nimport comment from \"../../images/comment.svg\"; \r\nimport share from \"../../images/share.svg\"; \r\n\r\n\r\nclass Post extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            commentList:[]\r\n         }\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.getComments();\r\n    }\r\n\r\n    getComments=()=>{ //API backend\r\n        // let data=[\r\n        //     {\r\n        //         \"username\": \"ASD\",\r\n        //         \"commentId\":\"1234\",\r\n        //         \"timeStamp\":\"123456\",\r\n        //         \"description\":\"Comment 1\"\r\n        //     },\r\n        //     {\r\n        //         \"username\": \"anindya\",\r\n        //         \"commentId\":\"1234\",\r\n        //         \"timeStamp\":\"123456\",\r\n        //         \"description\":\"Comment 2\"\r\n        //     },\r\n        //     {\r\n        //         \"username\": \"dasgupta\",\r\n        //         \"commentId\":\"1234\",\r\n        //         \"timeStamp\":\"123456\",\r\n        //         \"description\":\"Comment 3\"\r\n        //     }\r\n        // ];\r\n\r\n        fetch('http://localhost:8080/comments/'+this.props.id)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                this.setState({commentList: data});\r\n        });\r\n        \r\n    }\r\n    \r\n    submitComments =(event) =>{\r\n        if(event.key == \"Enter\") {\r\n            let comment=event.currentTarget.value;\r\n            if(comment!= null || comment!=undefined) {\r\n\r\n                let payload = {\r\n                    \"commentId\": Math.floor(Math.random()*1000000).toString(),\r\n                    \"userId\": JSON.parse(localStorage.getItem(\"users\")).uid,\r\n                    \"postId\": this.props.id,\r\n                    \"timeStamp\": new Date().getTime(),\r\n                    \"comment\": comment\r\n                }\r\n    \r\n                const requestOptions ={\r\n                    method: \"POST\",\r\n                    headers: { 'Content-Type': 'application/json' },\r\n                    body : JSON.stringify(payload),\r\n                }\r\n    \r\n                fetch(\"http://localhost:8080/comments\",requestOptions)\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    this.getComments();\r\n                })\r\n                .catch(error =>{\r\n    \r\n                })\r\n\r\n            }\r\n        }\r\n    }\r\n\r\n    render() { \r\n        return ( \r\n        <div className=\"post__container\">\r\n            {/* Header */}\r\n          <div className=\"post__header\">\r\n                <Avatar className=\"post__image\" src=\"\" />\r\n                <div className=\"post__username\">{this.props.userName}</div>\r\n          </div>\r\n\r\n          {/* Image */}\r\n          <div>\r\n              <img src={this.props.postImage} width=\"615px\" /> \r\n          </div>\r\n\r\n          {/* Analytics */}\r\n          <div>\r\n              <div style={{\"marginLeft\":\"10px\"}}>\r\n                  <img src={love} className=\"post_reactimage\"/>\r\n                  <img src={comment} className=\"post_reactimage\"/>\r\n                  <img src={share} className=\"post_reactimage\"/>\r\n              </div>\r\n              <div style={{ \"fontWeight\":\"bold\",\"marginLeft\":\"20px  \"}}>\r\n                  {this.props.likes} likes     \r\n              </div>\r\n          </div>\r\n\r\n          {/* Comment Section */}\r\n          <div>\r\n              {\r\n                  this.state.commentList.map((item,index)=>(\r\n                      index < 4 ?\r\n                        <div className=\"post_comment\">{item.userName}: {item.comment}</div> :<span></span>\r\n                  ))\r\n              }\r\n              <input text=\"text\" onKeyPress={this.submitComments} className=\"post__commentbox\" placeholder=\"Add a comment...\" />\r\n          </div>\r\n          \r\n        </div> \r\n        );\r\n    }\r\n}\r\n \r\nexport default Post;"]},"metadata":{},"sourceType":"module"}