{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"E:\\\\Cognizant\\\\FULL PROJECT\\\\insta-frontend\\\\src\\\\Components\\\\MainPage\\\\MainPage.js\";\nimport React, { Component } from 'react';\nimport \"./MainPage.css\";\nimport Post from '../Post/Post';\nimport uploadImage from \"../../images/upload.png\";\nimport { storage, auth } from \"../firebase\";\n\nclass MainPage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getPost = () => {\n      //API\n      const thisContext = this; // let data=[\n      //     {\n      //         \"postId\":\"123456\",\n      //         \"userName\":\"anindya\",\n      //         \"postImageURL\":\"https://irixlens.com/new/wp-content/uploads/2018/11/IRX_5473.jpg\",\n      //         \"timeStamp\":\"12345\",\n      //         \"likes\":\"1234\"\n      //     },\n      //     {\n      //         \"postId\":\"123456\",\n      //         \"userName\":\"anindya\",\n      //         \"postImageURL\":\"https://irixlens.com/new/wp-content/uploads/2018/11/IRX_5473.jpg\",\n      //         \"timeStamp\":\"12345\",\n      //         \"likes\":\"1234\"\n      //     },\n      //     {\n      //         \"postId\":\"123456\",\n      //         \"userName\":\"anindya\",\n      //         \"postImageURL\":\"https://irixlens.com/new/wp-content/uploads/2018/11/IRX_5473.jpg\",\n      //         \"timeStamp\":\"12345\",\n      //         \"likes\":\"1234\"\n      //     }\n      // ];\n\n      fetch('http://localhost:8080/post').then(response => response.json()).then(data => {\n        thisContext.setState({\n          postArray: data\n        });\n      });\n    };\n\n    this.upload = event => {\n      let image = event.target.files[0];\n      const thisContext = this;\n      if (image == null || image == undefined) return;\n      var uploadTask = storage.ref(\"images\").child(image.name).put(image);\n      uploadTask.on(\"state_changed\", function (snapshot) {\n        var progress = snapshot.bytesTransferred / snapshot.totalBytes * 100;\n        thisContext.setState({\n          progressBar: progress\n        });\n      }, function (error) {}, function () {\n        uploadTask.snapshot.ref.getDownloadURL().then(function (downloadURL) {\n          console.log(downloadURL);\n          let payload = {\n            \"postId\": Math.floor(Math.random() * 100000).toString(),\n            \"userId\": JSON.parse(localStorage.getItem(\"users\")).uid,\n            \"postPath\": downloadURL,\n            \"timeStamp\": new Date().getTime(),\n            \"likeCount\": 0\n          };\n          const requestOptions = {\n            method: \"POST\",\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(payload)\n          };\n          fetch(\"http://localhost:8080/post\", requestOptions).then(response => response.json()).then(data => {\n            console.log(data);\n            thisContext.getPost();\n          }).catch(error => {});\n        });\n      });\n    };\n\n    this.state = {\n      postArray: [],\n      progressBar: \"\"\n    };\n  }\n\n  componentDidMount() {\n    this.getPost();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mainpage__container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mainpage__divider\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"fileupload\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            for: \"file-upload\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"mainpage__uploadicon\",\n              src: uploadImage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            onChange: this.upload,\n            id: \"file-upload\",\n            type: \"file\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 26\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mainpage__divider\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"upload_text\",\n        children: this.state.progressBar\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }, this), this.state.postArray.map((item, index) => /*#__PURE__*/_jsxDEV(Post, {\n        id: item.postId,\n        userName: item.userName,\n        postImage: item.postPath,\n        likes: item.likeCount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 25\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default MainPage;","map":{"version":3,"sources":["E:/Cognizant/FULL PROJECT/insta-frontend/src/Components/MainPage/MainPage.js"],"names":["React","Component","Post","uploadImage","storage","auth","MainPage","constructor","props","getPost","thisContext","fetch","then","response","json","data","setState","postArray","upload","event","image","target","files","undefined","uploadTask","ref","child","name","put","on","snapshot","progress","bytesTransferred","totalBytes","progressBar","error","getDownloadURL","downloadURL","console","log","payload","Math","floor","random","toString","JSON","parse","localStorage","getItem","uid","Date","getTime","requestOptions","method","headers","body","stringify","catch","state","componentDidMount","render","map","item","index","postId","userName","postPath","likeCount"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport \"./MainPage.css\";\r\nimport Post from '../Post/Post';\r\nimport uploadImage from \"../../images/upload.png\";\r\nimport {storage,auth} from \"../firebase\";\r\n\r\n\r\nclass MainPage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            postArray:[],\r\n            progressBar: \"\",\r\n         }\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.getPost();\r\n    }\r\n\r\n    getPost=()=>{ //API\r\n        const thisContext=this;\r\n        // let data=[\r\n        //     {\r\n        //         \"postId\":\"123456\",\r\n        //         \"userName\":\"anindya\",\r\n        //         \"postImageURL\":\"https://irixlens.com/new/wp-content/uploads/2018/11/IRX_5473.jpg\",\r\n        //         \"timeStamp\":\"12345\",\r\n        //         \"likes\":\"1234\"\r\n        //     },\r\n        //     {\r\n        //         \"postId\":\"123456\",\r\n        //         \"userName\":\"anindya\",\r\n        //         \"postImageURL\":\"https://irixlens.com/new/wp-content/uploads/2018/11/IRX_5473.jpg\",\r\n        //         \"timeStamp\":\"12345\",\r\n        //         \"likes\":\"1234\"\r\n        //     },\r\n        //     {\r\n        //         \"postId\":\"123456\",\r\n        //         \"userName\":\"anindya\",\r\n        //         \"postImageURL\":\"https://irixlens.com/new/wp-content/uploads/2018/11/IRX_5473.jpg\",\r\n        //         \"timeStamp\":\"12345\",\r\n        //         \"likes\":\"1234\"\r\n        //     }\r\n        // ];\r\n\r\n        fetch('http://localhost:8080/post')\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                thisContext.setState({postArray: data});\r\n        });\r\n    }\r\n\r\n    upload=(event)=>{\r\n        let image=event.target.files[0];\r\n        const thisContext=this;\r\n        if(image == null || image == undefined)\r\n            return;\r\n\r\n        var uploadTask = storage.ref(\"images\").child(image.name).put(image);\r\n        uploadTask.on(\r\n          \"state_changed\",\r\n          function (snapshot) {\r\n            var progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\r\n            thisContext.setState({progressBar: progress});\r\n          },\r\n          function (error) {\r\n          },\r\n          function () {\r\n            uploadTask.snapshot.ref.getDownloadURL().then(function (downloadURL) {\r\n                console.log(downloadURL);\r\n\r\n                let payload = {\r\n                    \"postId\": Math.floor(Math.random()*100000).toString(),\r\n                    \"userId\": JSON.parse(localStorage.getItem(\"users\")).uid,\r\n                    \"postPath\": downloadURL,\r\n                    \"timeStamp\": new Date().getTime(),\r\n                    \"likeCount\": 0\r\n                }\r\n    \r\n                const requestOptions ={\r\n                    method: \"POST\",\r\n                    headers: { 'Content-Type': 'application/json' },\r\n                    body : JSON.stringify(payload),\r\n                }\r\n    \r\n                fetch(\"http://localhost:8080/post\",requestOptions)\r\n                .then(response => response.json())\r\n                .then(data => {\r\n                    console.log(data);\r\n                    thisContext.getPost();\r\n                })\r\n                .catch(error =>{\r\n    \r\n                })\r\n                \r\n            })\r\n            }\r\n        );\r\n    }\r\n\r\n    render() { \r\n        return ( \r\n            <div>\r\n                <div className=\"mainpage__container\">  \r\n                    <div className=\"mainpage__divider\"></div>\r\n                    <div className=\"fileupload\">\r\n                        <label for=\"file-upload\" >\r\n                            <img className=\"mainpage__uploadicon\" src={uploadImage} />\r\n                        </label>\r\n                         <input onChange={this.upload} id=\"file-upload\" type=\"file\"/>\r\n                     </div>\r\n                    <div className=\"mainpage__divider\"></div>   \r\n                </div>\r\n                <div className=\"upload_text\">{this.state.progressBar}</div>\r\n                {\r\n                    this.state.postArray.map((item,index)=>(\r\n                        <Post id={item.postId} userName={item.userName} postImage={item.postPath} likes={item.likeCount} />\r\n                    ))\r\n                }\r\n            </div>\r\n         );\r\n    }\r\n}\r\n \r\nexport default MainPage;"]},"metadata":{},"sourceType":"module"}